// Initialization
const Denon = require('denon-client';
const config = require('./config');
/**
 * Denon is now an object containing DenonClient and Options.
 * Use the DenonClient to send requests. Use the Options to define the data.
 */
const DenonAVRHost = config.get('reciever');

const denonClient = new Denon.DenonClient(`${DenonAVRHost}`);

let powerStatus;
let inputStatus;

// Subscribe to any available event
denonClient.on('masterVolumeChanged', (volume) => {
    // This event will fire every time when the volume changes.
    // Including non requested volume changes
    // (Using a remote, using the volume wheel on the device).

    console.log(`Volume changed to: ${volume}`);
});

denonClient.on('powerChanged', (state) => {
    powerStatus = state;
    console.log('Powerstate: ' + state);
});

denonClient.on('inputChanged', (state) => {
    inputStatus = state;
    console.log('Inputstate: ' + state);
});

// Connecting
denonClient.connect().then(() => {
    // Tasty promise chains..
    //
    // You are free to send any command now.
    // return denonClient.setPower(Denon.Options.PowerOptions.On); // Destroy neighborhood
    return denonClient.getPower();
}).then((status) => {
    powerStatus = status;
    // return denonClient.setInput(Denon.Options.InputOptions.Aux1);
    return denonClient.getInput();
}).then((status) => {
    inputStatus = status;
    return `${powerStatus} ${inputStatus}`;
}).then((status) => {
    console.log(status);
})
/*
.then(() => {

    return denonClient.setSurround(Denon.Options.SurroundOptions.Stereo);
})
.then(() => {

    return denonClient.setVolume(98); // Destroy neighborhood
})
*/
    .catch((error) => {
    // Oh noez.
    console.error(error);
});
